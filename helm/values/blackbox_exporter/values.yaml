restartPolicy: Always

kind: Deployment

namespaceOverride: ""

podDisruptionBudget: {}


automountServiceAccountToken: false

extraEnv: {}

extraVolumes: []

extraVolumeMounts:

extraInitContainers: []

extraContainers: []

pspEnabled: false

hostNetwork: false

strategy:
  rollingUpdate:
    maxSurge: 1
    maxUnavailable: 0
  type: RollingUpdate

image:
  repository: prom/blackbox-exporter
  tag: v0.20.0
  pullPolicy: IfNotPresent

runAsUser: 1000
runAsGroup: 1000
readOnlyRootFilesystem: true
runAsNonRoot: true
allowPrivilegeEscalation: false

livenessProbe:
  httpGet:
    path: /health
    port: http

readinessProbe:
  httpGet:
    path: /health
    port: http

nodeSelector: {}
tolerations: []
affinity:
  nodeAffinity:
    requiredDuringSchedulingIgnoredDuringExecution:
      nodeSelectorTerms:
      - matchExpressions:
        - key: "Infra-Services"
          operator: In
          values:
          - "true"

configExistingSecretName: ""
secretConfig: false
config:
  modules:
    http_2xx:
      prober: http
      timeout: 5s
      http:
        valid_http_versions: ["HTTP/1.1", "HTTP/2.0"]
        follow_redirects: true
        preferred_ip_protocol: "ip4"

extraConfigmapMounts: []

extraSecretMounts: []

allowIcmp: false

resources:
  limits:
    cpu: 100m
    memory: 200Mi
  requests:
    cpu: 50m
    memory: 50Mi

priorityClassName: ""

service:
  annotations: {}
  labels: {}
  type: ClusterIP
  port: 9115

containerPort: 9115

serviceAccount:
  create: true
  name:
  annotations: {}

ingress:
  enabled: false
  className: ""
  labels: {}
  annotations: {}
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []

podAnnotations:
  co.elastic.logs/enabled: "true"

hostAliases: []

pod:
  labels: {}

extraArgs: []

replicas: 1

serviceMonitor:

  enabled: true

  defaults:
    additionalMetricsRelabels: {}
    additionalRelabeling: []
    labels:
      release: prometheus-operator
    interval: 30s
    scrapeTimeout: 30s
    module: http_2xx
  scheme: http

  tlsConfig: {}
  bearerTokenFile:

  targets:
   - name: google                    
     url: http://google.com  

prometheusRule:
  enabled: false
  additionalLabels: {}
  namespace: ""
  rules: []

networkPolicy:
  enabled: false
  allowMonitoringNamespace: false

dnsPolicy:
dnsConfig:
